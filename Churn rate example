--- subscription table contains id, subscription_start, subscription_end
--- create a table defining the months to be calculated in a temporary months table
WITH months AS
(SELECT
  '2017-01-01' as first_day,
  '2017-01-31' as last_day
UNION
SELECT
  '2017-02-01' as first_day,
  '2017-02-28' as last_day
UNION
SELECT
  '2017-03-01' as first_day,
  '2017-03-31' as last_day
),
--- cross join with subscription to have month defining dates combined with each record, creating a unique record for each potential month of subscription
cross_join AS
(SELECT *
FROM subscriptions
CROSS JOIN months),
--- create a temporary status table that defines in Boolean terms whether that record is active to start each potential month and if it is canceled that month
status AS
(SELECT id, first_day as month,
CASE
  WHEN (subscription_start < first_day)
    AND (
      subscription_end > first_day
      OR subscription_end IS NULL
    ) THEN 1
  ELSE 0
END as is_active,
CASE 
  WHEN subscription_end BETWEEN first_day AND last_day THEN 1
  ELSE 0
END as is_canceled
FROM cross_join
),
--- create a temporary table to count actives and canceleds from each of the months where churn rate is to be calculated using GROUP BY and summing BOOLEAN
status_aggregate AS
(SELECT
  month,
  SUM(is_active) as active,
  SUM(is_canceled) as canceled
FROM status
GROUP BY month)
--- execute function to derive churn rate
SELECT month, ROUND(100.0 * canceled/active, 2) AS churn_rate_percentage
FROM status_aggregate;
